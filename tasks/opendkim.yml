---
- name: opendkim packages are installed
  apt: pkg={{ item }} state=installed
  with_items:
   - opendkim
   - opendkim-tools

- name: opendkim socket configured
  lineinfile: dest=/etc/default/opendkim regexp=^SOCKET= line='SOCKET="inet:12301@localhost"'
  notify:
   - restart opendkim

- name: opendkim directory present
  file: path=/etc/opendkim state=directory
  file: path=/etc/opendkim/keys state=directory

- name: opendkim TrustedHosts present
  copy: src=TrustedHosts dest=/etc/opendkim/TrustedHosts
  notify:
   - restart opendkim

- name: opendkim is configured
  template: src=opendkim.conf.j2 dest=/etc/opendkim.conf
  notify:
   - restart opendkim

- name: opendkim KeyTable is configured
  template: src=KeyTable.j2 dest=/etc/opendkim/KeyTable
  notify:
   - restart opendkim

- name: opendkim SigningTable is configured
  template: src=SigningTable.j2 dest=/etc/opendkim/SigningTable
  notify:
   - restart opendkim

- name: ensure signing key is present
  stat: path=/etc/opendkim/keys/{{ item }}/{{ dkim_selector }}.private get_md5=no
  with_items: dkim_domains
  register: dkim_key

- name: create dirs for key
  file: path=/etc/opendkim/keys/{{ item.item }} state=directory mode=0755
  when: item.stat.exists == false
  with_items: dkim_key.results

- name: generate signing key
  shell: opendkim-genkey -s {{ dkim_selector }} -d {{ item.item }} -D /etc/opendkim/keys/{{ item.item }}
  with_items: dkim_key.results
  when: item.stat.exists == false
  notify:
   - restart opendkim
 
- name: ensure signing key owner
  file: path=/etc/opendkim/keys/{{ item.item }}/{{ dkim_selector }}.private owner=opendkim group=opendkim
  with_items: dkim_key.results

- name: opendkim is running
  service: name=opendkim state=running enabled=yes
